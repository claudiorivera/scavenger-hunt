generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  isAdmin        Boolean         @default(false)
  createdItems   Item[]
  collectedItems CollectedItem[]
}

model Item {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  description    String
  createdBy      User            @relation(fields: [createdById], references: [id], onDelete: Cascade)
  createdById    String          @db.ObjectId
  collectedItems CollectedItem[]
}

model CollectedItem {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  imageUrl       String
  thumbnailUrl   String
  originalItem   Item   @relation(fields: [originalItemId], references: [id], onDelete: Cascade)
  originalItemId String @db.ObjectId
  foundBy        User   @relation(fields: [foundById], references: [id], onDelete: Cascade)
  foundById      String @db.ObjectId
}
